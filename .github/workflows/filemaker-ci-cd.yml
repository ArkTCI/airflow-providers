name: FileMaker Provider CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

permissions:
  contents: read

jobs:
  publish-to-pypi:
    name: Publish to PyPI
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
      published: ${{ steps.check_version.outputs.exists != 'true' }}
    container:
      image: ghcr.io/arktci/airflow-providers/filemaker-dependencies:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Extract version
        id: extract_version
        run: |
          VERSION=$(grep -o '"[0-9]\+\.[0-9]\+\.[0-9]\+"' filemaker/version.py | tr -d '"')
          echo "Version from version.py: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if version exists on PyPI
        id: check_version
        run: |
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://pypi.org/pypi/apache-airflow-providers-filemaker/${{ steps.extract_version.outputs.version }}/json)
          if [ "$HTTP_STATUS" == "200" ]; then
            echo "Version ${{ steps.extract_version.outputs.version }} already exists on PyPI"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Version ${{ steps.extract_version.outputs.version }} does not exist on PyPI"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build distribution
        if: steps.check_version.outputs.exists != 'true'
        run: |
          cd filemaker
          python -m build

      - name: Install twine
        if: steps.check_version.outputs.exists != 'true'
        run: pip install twine

      - name: Publish package to PyPI
        if: steps.check_version.outputs.exists != 'true'
        uses: pypa/gh-action-pypi-publish@v1.6.0
        with:
          packages_dir: filemaker/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
          verbose: true

  build-docker-image:
    name: Build and Push Docker Image
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest
    env:
      REGISTRY: docker.io
      IMAGE_NAME: arktci/airflow
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Get version
        id: get_version
        run: |
          VERSION=$(grep -o '"[0-9]\+\.[0-9]\+\.[0-9]\+"' filemaker/version.py | tr -d '"')
          echo "Version from version.py: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        if: needs.publish-to-pypi.outputs.version != ''
        uses: docker/build-push-action@v4
        with:
          context: ./filemaker
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:2.10.5
          build-args: |
            PROVIDER_VERSION=2.10.5
