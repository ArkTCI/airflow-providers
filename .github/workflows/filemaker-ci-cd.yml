name: FileMaker Provider CI/CD

on:
  workflow_dispatch:
    inputs:
      run_tests_only:
        description: 'Run only tests and linting (no release)'
        type: boolean
        default: true
        required: true

permissions:
  contents: read

jobs:
  check-existing-release:
    name: Check Existing Release
    runs-on: ubuntu-latest
    outputs:
      should_continue: ${{ steps.check_release.outputs.should_continue }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version from tag
        id: get_version
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"
      
      - name: Set test-only mode for manual trigger
        id: get_manual_version
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "Using workflow dispatch - test only mode"
          echo "version=test-only" >> $GITHUB_OUTPUT
      
      - name: Check if release exists
        id: check_release
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Always continue for manual test runs
            echo "should_continue=true" >> $GITHUB_OUTPUT
            echo "Manual test run - continuing with workflow"
          else
            VERSION="${{ steps.get_version.outputs.version }}"
            # Check if a GitHub release already exists for this version
            RELEASE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" \
              -H "Authorization: token ${{ github.token }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases/tags/v${VERSION}")
            
            if [[ "$RELEASE_EXISTS" == "200" ]]; then
              echo "Release v${VERSION} already exists. Skipping validation."
              echo "should_continue=false" >> $GITHUB_OUTPUT
            else
              echo "No existing release found for v${VERSION}. Continuing with validation."
              echo "should_continue=true" >> $GITHUB_OUTPUT
            fi
          fi

  lint:
    name: Lint Code
    needs: [check-existing-release]
    if: needs.check-existing-release.outputs.should_continue == 'true'
    uses: ./.github/workflows/filemaker-lint.yml

  test:
    name: Run Tests
    needs: [check-existing-release, lint]
    if: needs.check-existing-release.outputs.should_continue == 'true' && needs.lint.outputs.success == 'true'
    uses: ./.github/workflows/filemaker-test.yml
    with:
      ref: ${{ github.ref }}

  # Trigger PyPI publishing workflow for tags
  notify-publish:
    name: Notify Publishing Workflow
    needs: [check-existing-release, lint, test]
    if: startsWith(github.ref, 'refs/tags/v') && needs.check-existing-release.outputs.should_continue == 'true' && needs.test.outputs.success == 'true' && needs.lint.outputs.success == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger PyPI publish workflow
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: publish-to-pypi-event
          client-payload: '{"version": "${{ needs.check-existing-release.outputs.version }}", "tag": "v${{ needs.check-existing-release.outputs.version }}"}'
      
      - name: Log notification
        run: |
          echo "Notification sent to publish workflow for version ${{ needs.check-existing-release.outputs.version }}"
          echo "Publishing will be handled by the publish-filemaker-to-pypi.yml workflow"

  summary:
    needs: [check-existing-release, lint, test, notify-publish]
    if: always() && needs.check-existing-release.outputs.should_continue == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Display Workflow Status
        run: |
          echo "## FileMaker Provider CI/CD Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Event type info
          echo "**Event Type:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "**Manual Trigger - Test Only Mode**" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Tag Push - Version:** ${{ needs.check-existing-release.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Job status table
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | ------ |" >> $GITHUB_STEP_SUMMARY
          echo "| Lint | ${{ needs.lint.result == 'success' && '✅ Passed' || (needs.lint.result == 'skipped' && '⏭️ Skipped' || '❌ Failed') }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Test | ${{ needs.test.result == 'success' && '✅ Passed' || (needs.test.result == 'skipped' && '⏭️ Skipped' || '❌ Failed') }} |" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ github.event_name }}" != "workflow_dispatch" && startsWith(github.ref, 'refs/tags/v') ]]; then
            echo "| Notify Publish | ${{ needs.notify-publish.result == 'success' && '✅ Sent' || (needs.notify-publish.result == 'skipped' && '⏭️ Skipped' || '❌ Failed') }} |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Note:** Actual publishing is handled by the publish-filemaker-to-pypi.yml workflow" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Print to console as well
          echo "Event Type: ${{ github.event_name }}"
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Manual Trigger - Test Only Mode"
          else
            echo "Tag Push - Version: ${{ needs.check-existing-release.outputs.version }}"
          fi
          
          echo "Lint Status: ${{ needs.lint.result }}"
          echo "Test Status: ${{ needs.test.result }}"
          
          if [[ "${{ github.event_name }}" != "workflow_dispatch" && startsWith(github.ref, 'refs/tags/v') ]]; then
            echo "Notify Publish Status: ${{ needs.notify-publish.result }}"
            echo "Note: Actual publishing is handled by the publish-filemaker-to-pypi.yml workflow"
          fi 