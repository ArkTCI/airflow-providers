name: FileMaker Provider Release Workflow

# Note: This workflow requires proper permissions to push changes back to the repository.
# If you encounter permission errors, you may need to:
# 1. Set up a Personal Access Token (PAT) with appropriate permissions
# 2. Ensure all jobs have 'contents: write' permission
# 3. Configure git user identity in each job that makes commits

on:
  # For auto-approving release PRs
  pull_request:
    types: [opened, synchronize, ready_for_review]
    branches: [main]
    paths: ["filemaker/**"]
  
  # For publishing after a release PR is merged
  pull_request_target:
    types: [closed]
    branches: [main]
    paths: ["filemaker/**"]
  
  # Allow manual triggering for special cases
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (without v prefix)'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  packages: read

jobs:
  # Auto-approve release PRs
  auto-approve-release:
    if: github.event_name == 'pull_request' && !github.event.pull_request.draft && startsWith(github.event.pull_request.head.ref, 'release/v')
    runs-on: ubuntu-latest
    steps:
      - name: Wait for required checks
        uses: lewagon/wait-on-check-action@master
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 20
          running-workflow-name: auto-approve-release
          # By default, waits for all checks to complete except for the current workflow
          # check-name: 'build'  # Uncomment and specify if you want to wait for specific checks
      
      - name: Auto-approve and merge PR
        if: success()
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          VERSION=$(echo "${{ github.event.pull_request.head.ref }}" | sed -e 's/release\/v//')
          echo "Approving and merging release PR #$PR_NUMBER for version $VERSION"
          
          # Auto-approve the PR
          gh pr review $PR_NUMBER --approve
          
          # Enable auto-merge
          gh pr merge $PR_NUMBER --auto --merge --delete-branch
          echo "âœ… Auto-merge enabled for PR #$PR_NUMBER"

  # Publish to PyPI after a release PR is merged
  publish-to-pypi:
    if: (github.event_name == 'pull_request_target' && github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/v')) || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/arktci/airflow-providers/filemaker-dependencies:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: filemaker
    permissions:
      contents: read
      id-token: write  # Required for trusted publishing
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set version and build package
        run: |
          # Get version from input or branch name
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(echo "${{ github.event.pull_request.head.ref }}" | sed -e 's/release\/v//')
          fi
          
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Building package version: $VERSION"
          
          # Build the package
          python -m build
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: filemaker/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true 