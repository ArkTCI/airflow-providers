name: Publish FileMaker Provider to PyPI

on:
  push:
    paths:
      - 'filemaker/**'
      - '.github/workflows/publish-filemaker-to-pypi.yml'
  pull_request:
    paths:
      - 'filemaker/**'
      - '.github/workflows/publish-filemaker-to-pypi.yml'
  release:
    types: [created]
  workflow_dispatch:  # Allow manual triggering

jobs:
  quality:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: filemaker
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .
        
    - name: Lint with flake8
      run: |
        flake8 filemaker/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 filemaker/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Lint with pylint
      run: |
        pylint --disable=C,R,W filemaker/ || true  # Don't fail on warnings
        
    - name: Check formatting with black
      run: |
        black --check filemaker/
        
    - name: Check imports with isort
      run: |
        isort --check-only --profile black filemaker/
        
  test:
    runs-on: ubuntu-latest
    needs: quality
    defaults:
      run:
        working-directory: filemaker
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
        
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        
    - name: Test with pytest
      run: |
        pytest --cov=filemaker tests/ --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        
  deploy:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: filemaker
    permissions:
      contents: read
      id-token: write  # IMPORTANT: this permission is required for trusted publishing
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build package
      run: |
        python -m build
        
    - name: Check distribution
      run: |
        python -m twine check dist/*
        
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true
        verbose: true 