name: FileMaker Provider PR Linting
# This workflow runs linting checks on PRs, Dev branch pushes, and manual triggers
# It does not trigger any other workflows and is separate from the main CI pipeline

# Note: For this workflow to access GitHub Container Registry, ensure:
# 1. GitHub Actions has "Read and write permissions" under repository Settings > Actions > General
# 2. GitHub Packages is enabled for the repository

on:
  push:
    branches:
      - Dev
    paths:
      - "filemaker/src/**"
      - "filemaker/tests/**"
      - "!filemaker/requirements.txt"
      - "!filemaker/requirements-dev.txt"
  pull_request:
    paths:
      - "filemaker/src/**"
      - "filemaker/tests/**"
      - "!filemaker/requirements.txt"
      - "!filemaker/requirements-dev.txt"
  workflow_dispatch:
  workflow_call:
    # This allows the workflow to be called from other workflows
    outputs:
      lint_success:
        description: "Whether linting was successful"
        value: ${{ jobs.lint.outputs.success }}

jobs:
  check-if-bot-commit:
    runs-on: ubuntu-latest
    outputs:
      is_bot: ${{ steps.check_bot_commit.outputs.is_bot }}
    steps:
      - name: Check if commit is from GitHub Actions
        id: check_bot_commit
        run: |
          # Default is not a bot
          IS_BOT="false"
          
          # Don't check for bot commits when called from another workflow
          if [[ "${{ github.event_name }}" != "workflow_call" ]]; then
            # Only check head_commit for push events
            if [[ "${{ github.event_name }}" == "push" ]]; then
              if [[ "${{ github.event.head_commit.author.name }}" == "GitHub Actions" ]]; then
                IS_BOT="true"
              fi
            fi
          fi
          
          echo "is_bot=${IS_BOT}" >> $GITHUB_OUTPUT

  lint:
    needs: check-if-bot-commit
    if: needs.check-if-bot-commit.outputs.is_bot != 'true'
    name: Lint Code
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.set_success.outputs.success }}
    container:
      image: ghcr.io/arktci/airflow-providers/filemaker-dependencies:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      # No need to install dependencies as they're in the container

      - name: Run flake8
        id: flake8
        continue-on-error: true
        run: |
          cd filemaker
          flake8 src tests
          echo "status=$?" >> $GITHUB_OUTPUT

      - name: Run black
        id: black
        continue-on-error: true
        run: |
          cd filemaker
          black --check src tests
          echo "status=$?" >> $GITHUB_OUTPUT

      - name: Run isort
        id: isort
        continue-on-error: true
        run: |
          cd filemaker
          isort --check src tests
          echo "status=$?" >> $GITHUB_OUTPUT

      - name: Run mypy
        id: mypy
        continue-on-error: true
        run: |
          cd filemaker
          mypy src
          echo "status=$?" >> $GITHUB_OUTPUT

      - name: Determine overall success
        id: set_success
        shell: bash
        run: |
          # Set success output based on all checks passing
          if [[ "${{ steps.flake8.outputs.status }}" == "0" && "${{ steps.black.outputs.status }}" == "0" && "${{ steps.isort.outputs.status }}" == "0" && "${{ steps.mypy.outputs.status }}" == "0" ]]; then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
          fi
          
          # Print summary
          echo "Linting Results:"
          echo "- flake8: ${{ steps.flake8.outputs.status == '0' && '✅ Passed' || '❌ Failed' }}"
          echo "- black: ${{ steps.black.outputs.status == '0' && '✅ Passed' || '❌ Failed' }}"
          echo "- isort: ${{ steps.isort.outputs.status == '0' && '✅ Passed' || '❌ Failed' }}"
          echo "- mypy: ${{ steps.mypy.outputs.status == '0' && '✅ Passed' || '❌ Failed' }}"
          
          # Create job summary
          echo "## FileMaker Provider Linting Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "| ----- | ------ |" >> $GITHUB_STEP_SUMMARY
          echo "| flake8 | ${{ steps.flake8.outputs.status == '0' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| black | ${{ steps.black.outputs.status == '0' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| isort | ${{ steps.isort.outputs.status == '0' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| mypy | ${{ steps.mypy.outputs.status == '0' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ steps.flake8.outputs.status }}" == "0" && "${{ steps.black.outputs.status }}" == "0" && "${{ steps.isort.outputs.status }}" == "0" && "${{ steps.mypy.outputs.status }}" == "0" ]]; then
            echo "**Overall Status: ✅ All checks passed!**" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Overall Status: ❌ Some checks failed**" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Always exit with success to show the results without failing the workflow
          exit 0

      - name: Report Linting Status
        if: always()
        run: |
          if [[ "${{ steps.flake8.outputs.status }}" == "0" && "${{ steps.black.outputs.status }}" == "0" && "${{ steps.isort.outputs.status }}" == "0" && "${{ steps.mypy.outputs.status }}" == "0" ]]; then
            echo "✅ All linting checks passed!"
          else
            echo "❌ Some linting checks failed. See details above."
            echo "Note: This workflow is configured to show results without failing."
          fi