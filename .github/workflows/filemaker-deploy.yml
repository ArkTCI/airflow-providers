name: FileMaker Provider Deploy

on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - "filemaker/**"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true

jobs:
  check-pr:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/v')
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Extract version from branch name
        id: extract_version
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: check-pr
    if: needs.check-pr.outputs.version || github.event.inputs.version
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build distribution
        run: |
          cd filemaker
          python -m pip install --upgrade pip
          pip install build
          python -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: filemaker/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          verbose: true

      - name: Trigger Docker image build
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: build-filemaker-docker-image
          client-payload: |
            {
              "provider_version": "${{ needs.check-pr.outputs.version || github.event.inputs.version }}"
            }