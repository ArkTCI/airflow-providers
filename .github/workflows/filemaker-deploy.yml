name: FileMaker Provider Deploy

on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - "filemaker/src/**"
      - "filemaker/tests/**"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true
  workflow_call:
    inputs:
      version:
        description: 'Version to deploy'
        type: string
        required: false

jobs:
  check-pr:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/v')
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Extract version from branch name
        id: extract_version
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

  publish-to-pypi:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: check-pr
    if: needs.check-pr.outputs.version || github.event.inputs.version
    container:
      image: ghcr.io/arktci/airflow-providers/filemaker-dependencies:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      # No need to install dependencies as they're in the container

      - name: Build distribution
        run: |
          cd filemaker
          python -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: filemaker/dist/
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          verbose: true

  build-docker-image:
    name: Build and Push Docker Image
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest
    # Container not needed for this job as it's building a Docker image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get version
        id: get_version
        run: |
          VERSION="${{ needs.check-pr.outputs.version || github.event.inputs.version }}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./filemaker
          push: true
          tags: |
            yourdockerhub/filemaker-provider:latest
            yourdockerhub/filemaker-provider:${{ steps.get_version.outputs.version }}
          build-args: |
            PROVIDER_VERSION=${{ steps.get_version.outputs.version }}